services:
  api:
    build: 
      context: .
      dockerfile: ./api/Dockerfile
    container_name: financeml_api
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      # API Keys (optional - .env dosyasından okunur)
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY:-demo}
      - POLYGON_API_KEY=${POLYGON_API_KEY:-}
      # Network settings
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    volumes:
      # Mount parent directories so API can access data and models
      - ./data:/app/data
      - ./models:/app/models
      - ./api:/app/api
    dns:
      # Google ve Cloudflare DNS
      - 8.8.8.8
      - 1.1.1.1
    networks:
      - finance_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: financeml_frontend
    ports:
      - "3000:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - finance_network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: financeml_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - finance_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: financeml_grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    networks:
      - finance_network
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: financeml_cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    networks:
      - finance_network
    restart: unless-stopped

  # node-exporter:
  #   image: prom/node-exporter:latest
  #   container_name: financeml_node_exporter
  #   ports:
  #     - "9100:9100"
  #   command:
  #     - '--path.rootfs=/host'
  #   volumes:
  #     - /:/host:ro,rslave
  #   networks:
  #     - finance_network
  #   restart: unless-stopped
  #   # Note: node-exporter Linux root filesystem mount gerektirir
  #   # Windows'ta çalışmaz, Linux/WSL2'de kullanılabilir

networks:
  finance_network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: